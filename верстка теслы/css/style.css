*{
	box-sizing: border-box;
}

a { /*зададим всем ссылкам стили*/
	color: #fff;
	text-decoration: none; 
}

body {
	background-color: #0b0b0b; /*сделаем основной цвет фона сайта, согласно макета*/
	color: #fff; /*сделаем основной цвет текста сайта*/
	font-size: 24px; /*задпдим размер шрифта всему тексту сайта*/
	line-height: 28px; /*задпдим высоту шрифта всему тексту сайта*/
	/*font-family: 'Roboto', sans-serif;*/ /*а этот шрифт используется реже*/
    font-family: 'Roboto Condensed', sans-serif; /*подключим основной шрифт, используемый в сайте*/
    font-weight: 400; /*пропишем основную жирность шрифта сайта*/
}

/*header*/

.header {
	height: 100vh; /*сделаем высоту хедера на весь экран*/
	position: absolute; /*спозиционируем хедер относительно слайдера и совмести их друг на друга*/
	z-index: 5; /*чтобы хедер был виден поверх картинок слайдера*/
	background: rgba(0, 0, 0, 0.3); /*тень для картинки слайдера согласно макета*/
	/*тень и содержимое хедера ушло влево, чтобы все растянуть на весь экран обнулим отступы справа и слева*/
	left: 0;
	right: 0;
}

.container {
	padding: 0 15px; /*сделаем отступы сверху и снизу - 0, а справа и слева - 15рх*/
	max-width: 1230px; /*сделаем 30рх по краям с запасом(по 15рх), а свойство "max-width" позволяет при уменьшении размера экрана адаптивно уменьшаться контейнеру*/
    margin: 0 auto; /*отцентруем содержимое внутри контейнера - сверху и снизу "0", а по краям - "auto'*/
}

.header-top {
	display: flex;
	justify-content: space-between; /*раскидаем логотип и кнопку в одну строку*/
}

.logo {
	padding-top: 36px; /*сделаем отступы логотипу*/
	margin-bottom: 29px; /*сделаем отступы логотипу*/
}

.header-btn { /*создадим кнопку-бургер*/
	width: 60px;
	height: 60px;
	border: 1px solid #fff;
	margin-top: 31px; /*сделаем отступ сверху для кнопки-бургера*/
	background: rgba(255, 255, 255, 0.1); /*сделаем фон кнопке-бургеру*/
	display: flex; /*раскидаем дивы кнопки - это полоски кнопки*/
	flex-direction: column; /*раскидаем дивы кнопки вертикально*/
	align-items: center; /*выставим линии по центру по оси "х"*/
	justify-content: center; /*выставим линии по центру по оси "у"*/
	cursor: pointer; /*рука при наведении*/
}

.header-btn div { /*создадим кнопку-бургер, нарисуем ей полоски внутри*/
	width: 36px; /*длинна полосок*/
	height: 2px; /*ширина полосок*/
	background-color: #fff;
	margin: 5px 0; /*сделаем расстояния между линий кнопки-бургера(для ее дивов)*/
}

.menu { /*зададим стили (кнопке-бургеру) меню-навигации сайта*/
    background-color: #000; /*фон меню-навигации сайта согласно макета - черный*/
    position: absolute; /*спозиционируем меню-навигацию сайта относительно "хедера"*/
    top: 0; /*чтобы меню-навигация заняла полностью весь экран сверху при его "выпадении" (активации)*/
    left: -100%; /*чтобы меню-навигация ушла влево с экрана при обычном состоянии "по-умолчанию"*/
    width: 100%; /*чтобы меню-навигация заняла полностью весь экран при его "выпадении" (активации)*/
    transition: all 3s; /*добавим плавность включени меню-навигации сайта в "1 секунду"*/
    z-index: 7; /*зададим для меню-навигации сайта приоритет по оси-z, чтобы было в приоритете над слайдером при активации меню-навигации*/
}

.menu.active { /*при кликаньи на кнопку-бургер включается заданная функция в "main.js" для кнопки ".header-btn"*/
	left: 0;   /*и заданный "по-умолчанию" отступ влево с экрана при обычном состоянии отменяется - появляется меню-невигация сайта*/
}

.container-menu {
	position: relative; /*спозиционируем "+" выпадающего меню навигации сайта, чтобы он всегда находился внутри "контэйнера"*/ 
}

.close-btn { /*создадим закрывающий "+" выпадающего меню навигации сайта*/
	width: 50px; /*ширина "+"*/
	height: 50px; /*высота "+"*/
	/*background-color: #000;*/ /*этот фон для самой кнопки делаем, когда еще нет самого "+", чтобы видеть саму кнопку, потом фон можно удалить - все сольется с фоном меню*/
	position: absolute; /*спозиционируем "+", чтобы он всегда находился внутри "контэйнера"*/
	right: 15px; /*сделаем отступ справа для "+" (это величина захвата "контэйнера", чтобы "+" стал ровно под кнопкой-бургером)*/
	top: 31px; /*отступ сверху для "+"*/
	cursor: pointer; /*рука при наведении*/
}

.close-btn:after,
.close-btn:before { /*создадим сам закрывающий "+" выпадающего меню навигации сайта из двух полосок: одну на "after", другую на "before"*/
	content: "";
	width: 70px; /*длинна полоски "+"*/
	height: 2px; /*толщина полоски "+"*/
	background-color: #fff; /*цвет полоски "+"*/
	position: absolute; /*спозиционируем относительно "close-btn", у него тоже "absolute", но он родитель и "+" будет позиционироваться относительно него*/
	transform-origin: left; /*прижмем влево "+" относительно самой кнопки выпадающего меню сайта "close-btn" - спозиционируем "+" в саму кнопку*/
}

.close-btn:after { /*развернем полоски на 45 градусов в закрывающий "+" выпадающего меню навигации сайта*/
	transform: rotate(45deg);
}

.close-btn:before { /*развернем полоски на 45 градусов в закрывающий "+" выпадающего меню навигации сайта*/
	transform: rotate(-45deg);
	bottom: 0; /*опустим вниз полосу "+" относительно самой кнопки выпадающего меню сайта "close-btn" - спозиционируем "+" в саму кнопку*/
}

.menu__list {
	height: 100vh; /*растянем на весь экран само "выпадающее меню"*/
	display: flex; /*активируем "флексы"*/
	align-items: center; /*разместим само меню по центру по оси "х", по оси "у" ему ранее было задано свойство прижаться влево(left: 0;)*/
}

.menu__list ul {
	list-style: none; /*отменим списку его маркеровку, которая у него была по умолчанию*/
}

.menu__list a { /*зададим стили ссылкам выпадающего списка меню*/
	font-weight: bold;
    font-size: 48px;
    line-height: 56px;
    color: #FFFFFF;
    padding: 30px 25px 14px 0; /*отступы сверху 30рх, справа 25рх(для дальнейшей возможной замене или увеличения слова),а снизу 14рх, слева 0рх*/
    border-bottom: 3px solid #B70021; /*создадим как в макете полосу снизу ссылок меню сайта*/
    display: inline-block; /*зададим это свойство, чтобы "падинги" применились к ссылкам*/
    min-width: 368px; /*выровняем ширину полос подссылками, чтобы все были одинаковые*/ 
    transition: all .5s; /*время действия "ховер-эффекта" при наведении на ссылку*/   
}

.menu__list a:hover {
	border-color: #fff; /*сделаем изменение цвета линии под ссылкой при наведении на нее*/
	color: #B70021; /*сделаем изменение цвета текста ссылок при наведении на них*/
	transform: scale(1.2); /*сделаем увеличение текста ссылок при наведении на них на 20%(до 120% от первоначальных 100%)*/
	margin-left: 37px; /*зададим смещение влево ссылок при наведении*/
	/*transform: rotate(360deg);*/ /*поворот на 360 градусов при наведении на ссылку*/
}

.header-content__title { /*зададим стили заголовку*/
	font-family: 'Roboto', sans-serif;
	font-size: 96px;
	line-height: 112px;
	margin-bottom: 40px;
}

.header-content__text { /*стили тексту заданы по умолчанию в "body"*/
	width: 284px; /*зададим тексту его ширину, как в макете, чтобы он стал как в макете*/
	margin-bottom: 25px;
}

.button { /*зададим стили кнопке-ссылке*/
	display: inline-block; /*задаем ссылке это свойство, чтобы он перестала быть чисто блочным элементом, так как кнопка сделана ссылкой, чтобы к ней могли применить все стили: отступы от нее и т.д.*/
	border: 1px solid #fff;
	padding: 30px 62px; /*зададим расстояние от текста кнопки до ее рамки: сверху и снизу по 30рх, по краям - 62рх*/
	background-color: rgba(255, 255, 255, 0.15); /*цвет фона кнопки*/
	transition: all .5s; /*замедлим эффект при наведении на кнопку*/
}

.button:hover {
	background-color: #770302; /*меняет цвет при наведении на кнопку*/
}

.slider__item {
	height: 100vh; /*зададим высоту картинке слайдера, чтобы она появилась на сайте*/
	background-repeat: no-repeat; /*отменим повторяемость картинок*/
	background-size: cover; /*растянем картинку на весь ее размер*/
	background-position: center; /*центруем картинки для дальнейшего адаптива к меньшим экранам*/
}

.slyder .slick-dots button { /*зададим стили "дотсам"-кнопкам навигации слайдера; название класса ".slick-dots button" берем при просмотре "кода элемента" нажав на "дотсы" слайдера*/
    width: 15px; /*зададим размер "дотсам"*/
    height: 15px;
    border-radius: 50%; /*сделаем "дотсы" круглыми*/
    border: none;
    background-color: #0b0b0b; /*цвет фона "дотсов"*/
    padding: 0; /*отменим все заданные "дотсам по умолчанию отступы для того, чтобы потом задать свои отступы"*/
    font-size: 0; /*зададим размер шрифта "0" внутри "дотсов", чтобы убрать находящиеся в них по умолчанию цифры*/
    cursor: pointer; /*рука при наведении на кнопк-дотсы слайдера*/
    outline: none; /*уберем возникающий синий бордер при кликаньи на кнопку-дотс слайдера*/
}

.slyder .slick-dots .slick-active button { /*зададим цвет активной кнопке(дотсу); название класса ".slick-active button" берем при просмотре "кода элемента" нажав на "дотсы" слайдера*/
	background-color: #fff;
}

.slyder .slick-dots li { /*зададим положение кнопкам(дотсам); название класса ".slick-dots li" берем при просмотре "кода элемента" нажав на "дотсы" слайдера*/
	display: inline-block; /*выстроим кнопки-дотсы в одну линию*/
	margin: 0 5px; /*сделаем отступы сверху и снизу -0, справа и слева-5рх*/
}

.slyder .slick-dots { /*зададим стили "дотсам"-кнопкам навигации слайдера; название класса ".slick-dots" берем при просмотре "кода элемента" нажав на "дотсы" слайдера*/
	margin: -55px auto 0; /*поднимем вверх кнопки-дотсы и сделаем автоотступ внутри "контейнера"*/
	position: relative; /*спозиционируем кнопоки-дотсы относительно картинок слайдера*/
	z-index: 6; /*поместим кнопки-дотсы поверх картинок слайдера*/
	max-width: 1230px; /*этим свойством мы поместим кнопки-дотсы внутрь контейнера, внутри которого находится основной контент(его ширина по умолчанию 1230рх - отступы по 15рх по краям)*/
	padding: 0 15px; /*отступ слева 15рх*/
}
/*End header*/

/*Section statistics*/

.statistics {
	margin: 105px 0 100px; /*сделаем отсупы для всей секции(как в макете) сверху-105рх, по бокам-0рх, снизу-100рх*/
}

.statistics-items {
	display: flex; /*расположим все содержимое блока в строку*/
	justify-content: space-around; /*расположим все содержимое блока в строку и равноудаленно друг от друга*/
	text-align: center; /*отцентруем все в столбиках*/
}

.statistics-item__title {
    margin-bottom: 19px; /*зададим отступ снизу*/
}

.statistics-item__num {
    font-size: 96px;
    line-height: 112px;
    margin-bottom: 7px; /*зададим отступ снизу*/
    font-family: 'Roboto', sans-serif;
}

.statistics-item__num span {
	font-size: 24px;
    line-height: 28px;
    margin-left: -20px; /*согласно макета разместим*/
 }

.statistics-item__descr {
    color: #870021;
}

/*.statistics-item__num--speed span {
	display: inline-block;*/ /*сделаем "span" линейно-блочным элементом
	 
}*/

.statistics-item__num--speed:before { /*нарисуем сам плюсик*/
	content: "+"; /*нарисуем сам плюсик*/
	position: absolute; /*спозиционируем "+" */
    margin-left: 160px;
    font-size: 24px;
    margin-top: -50px;/*зададим местоположение "+"*/	 
}
/*End Section statistics*/

/*section video*/

.video {
	margin-bottom: 100px;
}
/*End section video*/

/*section advantages*/

.advantages-inner__row {
	margin-bottom: 100px;
	display: flex; /*расположим элементы этого блока в одну строку*/
	justify-content: space-between; /*расположим элементы этого блока в одну строку*/
	align-items: center; /*отцентруем все элементу по центру по оси "у"*/
	position: relative; /*спозиционируем заголовок в этом блоке*/
}

.advantages__title { /*зададим необходимые стили заголовку*/
	line-height: 42px;
	color: #870021;
	font-size: 36px;
	position: absolute; /*спозиционируем заголовок в этом блоке*/
	top: 0;  /*заголовок уйдет до конца влево и вверх*/
	left: 0; /*заголовок уйдет до конца влево и вверх*/
}

.advantages__title--bottom { /*разместим второй заголовок*/
	bottom: 0; /*заголовок уйдет до конца вправо и вниз*/
	right: 0; /*заголовок уйдет до конца вправо и вниз*/
	top: auto; /*чтобы заголовок обязательно ушел вниз*/
	left: auto; /*чтобы заголовок обязательно ушел вправо*/
}

.advantages__text {
	width: 303px; /*зададим элементу с текстом ширину как в макете и его строки выстроятся как в макете*/
}

.advantages__text ul {
	list-style: none; /*уберем маркеры перед списком*/
}

.advantages-descr {
	max-width: 570px; /*зададим этому элементу максимальную ширину, как у картинок рядом и они тогда расположатся на равном расстоя нии друг от друга слева*/
	width: 100%; /*зададим ширине свойство в 100%, чтобы ширина этого элемента стала максимально заданной - 570рх*/
}
/*End section advantages*/

/*section design*/

.design__images {
	margin-bottom: 100px;
}

.design-row {
	display: flex; /*расположим содержимое этого блока в строку*/
	justify-content: space-between; /*расположим содержимое этого блока в строку*/
	margin-bottom: 100px; /*сделаем отступ снизу для элементов этого блока*/
}

.design-row__item {
	max-width: 570px; /*зададим этому элементу максимальную ширину, как у картинок рядом и они тогда расположатся на равном расстоя нии друг от друга слева*/
	width: 100%; /*зададим ширине свойство в 100%, чтобы ширина этого элемента стала максимально заданной - 570рх*/
	padding-right: 15px; /*сделаем отступ вправо для всего блока*/
	display: flex; /*раскидаем текст (не зависимо от цифр) в одну строку*/
	justify-content: space-between; /*раскидаем текст (не зависимо от цифр) в одну строку*/
}

.design-row__item-num {
	color: #870021;
}

.design-row__item-text {
	max-width: 430px; /*для текста сделаем максимальную ширину*/
	padding-top: 25px; /*сделаем отступ тексту сверху, как в макете*/	
}
/*End section design*/

/*footer*/

.footer {
	background-color: #690102;
	padding: 83px 0 20px; /*зададим отступы сверху 83рх, снизу 20рх, а по бокам 0рх*/
}

.footer-btn {
	text-align: center; /*выставим секцию с кнопкой по центру*/
	margin-bottom: 83px; /*сделаем отступ снизу для кнопки*/
}

.footer-btn .button:hover { /*изменим цвет кнопки при наведении*/
	background-color: green;
}

.footer-copy {
	text-align: center; /*выставим все ссылки по центру футера по оси "х"*/
	font-weight: 700; /*укажем нужную жирность шрифта*/
}

.footer-copy ul {
	list-style: none; /*уберем маркеры в списке "ul"*/
}

.footer-copy li {
	display: inline-block; /*выстроим список в линию*/
	padding: 0 10px; /*зададим расстояние между ссылками списка в 10рх*/
	position: relative; /*спозиционируем "|"*/
}

.footer-copy li+li:before { /*вставим между ссылками списка эту "|" линию; из-за записи "li+li" вставится перед каждой "li" кроме первой "li"*/
	content: "|"; /*вставим между ссылками списка эту "|" линию*/
	position: absolute; /*спозиционируем "|"*/
	left: -5px; /*выставим по середине между ссылками*/
}
/*End footer*/



/*@media*/



/*body @media*/

@media (max-width: 410px) {
	body{ /*зададим размер шрифта для всего сайта при этом разрешении экрана*/
		font-size: 20px;
		line-height: 24px;
	}
}

/*Header @media*/

@media (max-width: 440px){
 .header-content__title{ /*уменьшим размер шрифта и отступы в заголовке при этом размере экрана*/
  	font-size: 80px;
  	margin-top: 20px;
  	line-height: 90px;
  }
}

@media (max-width: 410px) {
  .logo img{
  	width: 200px; /*уменьшим ширину логотипа при этом размере экрана*/
  }
  .header-content__title{ /*уменьшим размер шрифта и отступы в заголовке при этом размере экрана*/
  	font-size: 70px;
  	margin-top: 20px;
  	line-height: 85px;
  }
  .menu__list ul{ /*для всего списка ссылок сделаем ширину в 100% приэтом разрешении экрана*/
  	width: 100%;
  }
  .menu__list a{ /*для всего списка ссылок уменьшим шрифт и отступы*/
  	font-size: 30px;
  	line-height: 44px;
  	padding: 19px 10px 7px 0;
  	display: block;
  	min-width: 100%; /*определим минимальную ширину для ссылок - 100% ширины экрана при этом разрешении*/
  }
  .button{
  	padding: 20px 45px; /*уменьшим размеры кнопки при этом разрешении экрана уменьшением ее внутренних отступов*/
  }
}
/*End Header @media*/

/*Section statistics @media*/

@media (max-width: 820px) {
  .statistics-items{
  	flex-wrap: wrap; /*зададим это свойство при этом разрешении экрана и элементы будут переходить вниз когда не будет места при сужении экрана*/
  }
  .statistics-item{
  	padding: 50px; /*зададим отступы между элементами при этом разрешении экрана*/
  }
}
@media (max-width: 410px) {
 .statistics-item{
  	padding: 25px 0; /*зададим отступы между элементами при этом разрешении экрана*/
  }
  .statistics{
  	margin: 110px 0 50px; /*уменьшим отступы для этого блока при этом разрешении экрана*/
  }
}
/*End Section statistics @media*/

/*Section video @media*/

@media (max-width: 410px) {
  .video{
	margin-bottom: 50px; /*уменьшим отступ снизу для секции при этом разрешении экрана*/
  }
}
/*End Section video @media*/

/*Section advantages @media*/

@media (max-width: 1220px) {
  .advantages__text{
	padding-left: 20px; /*зададим тексту фиксированный отступ слева, чтобы он не прилипал к картинке при уменьшении размера экрана*/
  }
}
@media (max-width: 930px) {
  .advantages-inner__row{
    flex-wrap: wrap; /*зададим это свойство при этом разрешении экрана и элементы будут переходить вниз когда не будет места при сужении экрана*/
    justify-content: center; /*расположим все содержимое по центру по оси "у" при этом размере экрана*/
    margin-bottom: 50px; /*уменьшим отступ снизу для этого блока при этом размере экрана*/
  }
  .advantages__title{
  	position: static; /*это свойство выключает ранее заданое позиционирование "position: absolute"; зададим это свойство при этом размере экрана*/
  }
  .advantages-descr{
  	text-align: center; /*расположим заголовок и текст этого блока по центру по оси "х" для этого размера экрана*/
  }
  .advantages__text{
  	margin: 25px auto; /*так как у текста фиксированная ширина, он не становится четко по центру; для этого заддадим ему это свойство и текст станет по центру и отступит снизу от картинки 25рх*/
  	padding-left: 0; /*уберем ранее заданный отступ тексту для этого размера экрана*/
  }
  .advantages-inner__row--mobile .advantages-descr{ /*обратимся к родителю ".advantages-inner__row--mobile" текста и картинки вместе и к родителю текста ".advantages-descr"*/
  	order: -1; /*поменяем местами текст и картинку, задав родителю текста это свойство при этом размере экрана*/
  }
  .advantages-descr--bottom{ /*поменяем местами заголовок и текст в нижнем блоке*/
  	display: flex; /*для этого включим в этом блоке "флексы"*/
  	flex-direction: column-reverse;  /*поменяем заголовок и текст местами - заголовок поместим вверх, обратившись к классу где находится заголовок*/
  } 
         /*или так можно поменять местами, зададав элементам класса ".advantages-descr--bottom" свойства построения в колонку - "flex-direction: column"*/
  /*.advantages__title--bottom{*/
  /*	order: -1;*/ /*поменяем заголовок и текст местами - заголовок поместим вверх, обратившись к классу где находится заголовок ".advantages__title--bottom" и зададим ему приоритет*/   
 /* }*/
}
@media (max-width: 650px) {
	.advantages__img img{ /*зададим картинкам свойство, которое позволит им адаптироваться при уменьшении размера экрана*/
		width: 100%;
	}
}
@media (max-width: 410px) {
	.advantages__text{ /*зададим блоку с текстом адаптивность - размер 100% от размера экрана при этом разрешении экрана*/
		width: 100%;
	}
}
/*End Section advantages @media*/

/*Section design @media*/

@media (max-width: 1230px) {
	.design__images img{ /*зададим картинкам свойство, которое позволит им адаптироваться при уменьшении размера экрана*/
		width: 100%;
	}	
} 
@media (max-width: 1020px) {
	.design-row{
		display: block; /*разместим элементы этого блока в колонку при этом размере экрана*/
		margin-bottom: 50px; /*отступ снизу для всего блока при этом размере экрана*/
	}
	.design-row__item{
		max-width: 100%; /*зададим этому блоку свойство занимать 100% экрана при этом размере экрана*/
		margin-bottom: 50px; /*отступ снизу для текста при этом размере экрана*/		
	}
	.design-row__item-text{
		max-width: 100%; /*зададим этому элементу свойство занимать 100% экрана при этом размере экрана*/
	}
	.design__images{
		margin-bottom: 50px; /*зададим отступ от картинки снизу*/
	}
}
@media (max-width: 650px) {
	.design-row__item-text{
		font-size: 20px; /*уменьшим размер шрифта при этом размере экрана*/
	}
}
/*End Section design @media*/



/*END @media*/